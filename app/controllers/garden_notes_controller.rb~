class GardenNotesController < ApplicationController
  before_action :set_garden_note, only: [:show, :edit, :update, :destroy]

  # GET /garden_notes
  # GET /garden_notes.json
  def index
    @garden_notes = GardenNote.all
  end

  # GET /garden_notes/1
  # GET /garden_notes/1.json
  def show
  end

  # GET /garden_notes/new
  def new
    @garden_note = GardenNote.new
  end

  # GET /garden_notes/1/edit
  def edit
  end

  # POST /garden_notes
  # POST /garden_notes.json
  def create
    @garden_note = GardenNote.new(garden_note_params)

    respond_to do |format|
      if @garden_note.save
        format.html { redirect_to @garden_note, notice: 'Garden note was successfully created.' }
        format.json { render :show, status: :created, location: @garden_note }
      else
        format.html { render :new }
        format.json { render json: @garden_note.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /garden_notes/1
  # PATCH/PUT /garden_notes/1.json
  def update
    respond_to do |format|
      @g_n_p = garden_note_params
      if @garden_note.update(garden_note_params)
        format.html { redirect_to @garden_note, notice: 'Garden note was successfully updated.' }
        format.json { render :show, status: :ok, location: @garden_note }
      else
        format.html { render :edit }
        format.json { render json: @garden_note.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /garden_notes/1
  # DELETE /garden_notes/1.json
  def destroy
    @garden_note.destroy
    respond_to do |format|
      format.html { redirect_to garden_notes_url, notice: 'Garden note was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_garden_note
      @garden_note = GardenNote.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def garden_note_params
      params.require(:garden_note).permit(:type, :sub_type, :g_note)
    end
end
